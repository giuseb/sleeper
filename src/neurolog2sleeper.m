function neurolog2sleeper(fname, epoch)

% NEUROLOG2SLEEPER convert neurologger data for sleeper usage.
%
% NEUROLOG2SLEEPER(FNAME, EPOCH) converts data contained in the .mat file
% indicated by FNAME into a new .mat file, suitable for the SLEEPER tool.
% The data files must have been generated by the XXXX Neurologger utility. 
% If EPOCH is given, 

% default 10-second epoch, if argument is omitted
if nargin < 2, epoch = 10; end
% the Neurologger's sample rate
s_rate = 200;
% Neurologger signal data are in uint8.
% This coefficient turns ADC counts into ?V
adc2uV = 5.859;

% load the Section structure from within the file
load(fname, 'Section');

% a neurologger data file can be split into segments due to recording
% interruptions
num_of_segments = length(Section);

for seg = 1:num_of_segments
   % extract the raw data into a 6-column matrix, 1 column per channel
   A = [
      Section(seg).AdcChannel0
      Section(seg).AdcChannel1
      Section(seg).AdcChannel2
      Section(seg).AdcChannel3
      Section(seg).StatusByte
      Section(seg).SyncChannel
      ];
   
   % find number of samples to fit an integer number of epochs;
   % trim the trailing data
   samples_per_epoch = s_rate * epoch;
   crop = floor(size(A,1)/samples_per_epoch) * samples_per_epoch;
   A(crop+1:end, :) = [];
   % find the isopotential for each channel by computing average signals
   isopots = mean(A);
   % make signal values relative to these isopotentials
   A = A - repmat(isopots,size(A,1),1);
   % convert ADC values to ?V
   A(:,1:4) = A(:,1:4) * adc2uV;
   
   % WRITING OUT THE SEGMENT
   [pa, fi, ex] = fileparts(fname);
   fn = fullfile(pa, sprintf('%s%03d%s', fi, seg, ex));
   save(fn, 'A');
end

